{"version":3,"sources":["../node_modules/@amatiasq/geometry/node_modules/@amatiasq/util/es5/accessor.js","../node_modules/@amatiasq/geometry/node_modules/@amatiasq/util/es5/getParam.js","../node_modules/@amatiasq/geometry/node_modules/@amatiasq/util/es5/index.js","../node_modules/@amatiasq/geometry/es5/util.js","../node_modules/@amatiasq/geometry/es5/Rectangle.js","../node_modules/@amatiasq/geometry/es5/SquaredCircle.js","../node_modules/@amatiasq/geometry/es5/Vector.js","../node_modules/@amatiasq/geometry/es5/index.js","../node_modules/@amatiasq/util/es5/accessor.js","../node_modules/@amatiasq/util/es5/getParam.js","../node_modules/@amatiasq/util/es5/index.js","../src/QuadtreeCanvasRenderer.ts","../src/quadtree.ts","Canvas.ts","index.ts"],"names":[],"mappings":"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","file":"demo.9dc32b2b.js","sourceRoot":"../../packages/quadtree/demo","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction accessor(accessor, handler) {\n    if (handler === void 0) { handler = null; }\n    var get = new Function(\"return this.\" + accessor);\n    var set = new Function('value', \"this.\" + accessor + \" = value\");\n    if (handler) {\n        set = eval(\"(function smartSetter(value) {\\n      const prev = this.\" + accessor + \";\\n      this.\" + accessor + \" = value;\\n      handler(this, prev, value);\\n    })\");\n    }\n    return { get: get, set: set };\n}\nexports.default = accessor;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar list = window.location.search\n    .substr(1)\n    .split('&')\n    .map(function (x) { return x.split('='); });\nvar params = new Map(list);\nfunction getParam(name, def) {\n    return params.has(name) ? params.get(name) : def;\n}\nexports.default = getParam;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar accessor_1 = require(\"./accessor\");\nexports.accessor = accessor_1.default;\nvar getParam_1 = require(\"./getParam\");\nexports.getParam = getParam_1.default;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction containsPoint(self, _a) {\n    var x = _a.x, y = _a.y;\n    return y > self.top && y < self.bottom && x > self.left && x < self.right;\n}\nexports.containsPoint = containsPoint;\nfunction contains(self, _a) {\n    var top = _a.top, left = _a.left, right = _a.right, bottom = _a.bottom;\n    return (top >= self.top &&\n        bottom <= self.bottom &&\n        left >= self.left &&\n        right <= self.right);\n}\nexports.contains = contains;\nfunction collides(self, _a) {\n    var top = _a.top, left = _a.left, right = _a.right, bottom = _a.bottom;\n    var isBottomInside = self.bottom > bottom && bottom > self.top;\n    var isTopInside = self.bottom > top && top > self.top;\n    var isRightInside = self.right > right && right > self.left;\n    var isLeftInside = self.right > left && left > self.left;\n    return (isBottomInside || isTopInside) && (isRightInside || isLeftInside);\n}\nexports.collides = collides;\nfunction random(minOrMax, max) {\n    var min;\n    if (minOrMax == null) {\n        min = 0;\n        max = 1;\n    }\n    else if (max == null) {\n        min = 0;\n        max = minOrMax;\n    }\n    else {\n        min = minOrMax;\n    }\n    return Math.random() * (max - min) + min;\n}\nexports.random = random;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util_1 = require(\"@amatiasq/util\");\nvar util_2 = require(\"./util\");\nvar Rectangle = /** @class */ (function () {\n    function Rectangle() {\n    }\n    Rectangle.fromCenter = function (x, y, halfWidth, halfHeight) {\n        var rect = new this();\n        rect.x = x;\n        rect.y = y;\n        rect.halfWidth = halfWidth;\n        rect.halfHeight = halfHeight;\n        return rect;\n    };\n    Rectangle.fromXY = function (x, y, width, height) {\n        var halfWidth = width / 2;\n        var halfHeight = height / 2;\n        return this.fromCenter(x + halfWidth, y + halfHeight, halfWidth, halfHeight);\n    };\n    Rectangle.fromCoords = function (top, left, right, bottom) {\n        return this.fromXY(left, top, right - left, bottom - top);\n    };\n    Rectangle.prototype.is = function (target) {\n        return (this.x === target.x &&\n            this.y === target.y &&\n            this.width === target.width &&\n            this.height === target.height);\n    };\n    Rectangle.prototype.containsPoint = function (target) {\n        return util_2.containsPoint(this, target);\n    };\n    Rectangle.prototype.contains = function (target) {\n        return util_2.contains(this, target);\n    };\n    Rectangle.prototype.collides = function (target) {\n        return util_2.collides(this, target);\n    };\n    Rectangle.prototype.toString = function () {\n        var _a = this, top = _a.top, left = _a.left, width = _a.width, height = _a.height;\n        return \"Rectangle(t:\" + top + \",l:\" + left + \",w:\" + width + \",h:\" + height + \")\";\n    };\n    return Rectangle;\n}());\nexports.default = Rectangle;\nObject.defineProperties(Rectangle.prototype, {\n    x: util_1.accessor('_x', onHorizontalChange),\n    y: util_1.accessor('_y', onVerticalChange),\n    width: util_1.accessor('_width', onWidthChange),\n    height: util_1.accessor('_height', onHeightChange),\n    halfWidth: util_1.accessor('_halfWidth', onHalfWidthChange),\n    halfHeight: util_1.accessor('_halfHeight', onHalfHeightChange),\n    // When this properties are changed the position changes\n    top: util_1.accessor('_top', onTopChange),\n    left: util_1.accessor('_left', onLeftChange),\n    right: util_1.accessor('_right', onRightChange),\n    bottom: util_1.accessor('_bottom', onBottomChange),\n});\nfunction onHorizontalChange(rect) {\n    rect._left = rect._x - rect._halfWidth;\n    rect._right = rect._x + rect._halfWidth;\n}\nfunction onVerticalChange(rect) {\n    rect._top = rect._y - rect._halfHeight;\n    rect._bottom = rect._y + rect._halfHeight;\n}\nfunction onWidthChange(rect) {\n    rect._halfWidth = rect._width / 2;\n    onHorizontalChange(rect);\n}\nfunction onHeightChange(rect) {\n    rect._halfHeight = rect._height / 2;\n    onVerticalChange(rect);\n}\nfunction onHalfWidthChange(rect) {\n    rect._width = rect._halfWidth * 2;\n    onHorizontalChange(rect);\n}\nfunction onHalfHeightChange(rect) {\n    rect._height = rect._halfHeight * 2;\n    onVerticalChange(rect);\n}\nfunction onTopChange(rect, value, prev) {\n    rect._y -= value - prev;\n    onVerticalChange(rect);\n}\nfunction onLeftChange(rect, value, prev) {\n    rect._x -= value - prev;\n    onHorizontalChange(rect);\n}\nfunction onRightChange(rect, value, prev) {\n    rect._x -= value - prev;\n    onHorizontalChange(rect);\n}\nfunction onBottomChange(rect, value, prev) {\n    rect._y -= value - prev;\n    onVerticalChange(rect);\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util_1 = require(\"@amatiasq/util\");\nvar util_2 = require(\"./util\");\nvar SquaredCircle = /** @class */ (function () {\n    function SquaredCircle() {\n    }\n    SquaredCircle.fromCenter = function (x, y, radius) {\n        var area = new SquaredCircle();\n        area.x = x;\n        area.y = y;\n        area.radius = radius;\n        return area;\n    };\n    SquaredCircle.prototype.is = function (target) {\n        return (this.x === target.x &&\n            this.y === target.y &&\n            this.radius === target.radius);\n    };\n    SquaredCircle.prototype.containsPoint = function (target) {\n        return util_2.containsPoint(this, target);\n    };\n    SquaredCircle.prototype.contains = function (target) {\n        return util_2.contains(this, target);\n    };\n    SquaredCircle.prototype.collides = function (target) {\n        return util_2.collides(this, target);\n    };\n    SquaredCircle.prototype.toString = function () {\n        return \"[\" + this.top + \",\" + this.left + \"][\" + this.bottom + \",\" + this.right + \"]\";\n    };\n    return SquaredCircle;\n}());\nexports.default = SquaredCircle;\nObject.defineProperties(SquaredCircle.prototype, {\n    x: util_1.accessor('_x', onHorizontalSizeChange),\n    y: util_1.accessor('_y', onVerticalSizeChange),\n    radius: util_1.accessor('_radius', onRadiusChange),\n    diameter: util_1.accessor('_diameter', onDiameterChange),\n    width: util_1.accessor('diameter'),\n    height: util_1.accessor('diameter'),\n    halfWidth: util_1.accessor('radius'),\n    halfHeight: util_1.accessor('radius'),\n    top: util_1.accessor('_top', onVerticalPositionChange),\n    left: util_1.accessor('_left', onHorizontalPositionChange),\n    right: util_1.accessor('_right', onHorizontalPositionChange),\n    bottom: util_1.accessor('_bottom', onVerticalPositionChange),\n});\nfunction onHorizontalSizeChange(area) {\n    area._left = area._x - area._radius;\n    area._right = area._x + area._radius;\n}\nfunction onVerticalSizeChange(area) {\n    area._top = area._y - area._radius;\n    area._bottom = area._y + area._radius;\n}\nfunction onRadiusChange(area) {\n    area._diameter = area._radius * 2;\n    onHorizontalSizeChange(area);\n    onVerticalSizeChange(area);\n}\nfunction onDiameterChange(area) {\n    area._radius = area._diameter / 2;\n    onHorizontalSizeChange(area);\n    onVerticalSizeChange(area);\n}\nfunction onVerticalPositionChange(area, prev, value) {\n    area._y += value - prev;\n    onVerticalSizeChange(area);\n}\nfunction onHorizontalPositionChange(area, prev, value) {\n    area._x += value - prev;\n    onHorizontalSizeChange(area);\n}\n","\"use strict\";\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util_1 = require(\"./util\");\nvar abs = Math.abs;\nvar Vector = /** @class */ (function () {\n    function Vector(x, y) {\n        this.x = x;\n        this.y = y;\n        if (isNaN(x) || isNaN(y)) {\n            throw new Error(\"Creating vector with NaN: \" + this);\n        }\n        Object.freeze(this);\n    }\n    Vector.of = function (x, y) {\n        return new Vector(x, y);\n    };\n    Vector.from = function (_a) {\n        var _b = _a.x, x = _b === void 0 ? 0 : _b, _c = _a.y, y = _c === void 0 ? 0 : _c;\n        return new Vector(x, y);\n    };\n    Vector.fromRandom = function (minOrMax, max) {\n        return new Vector(util_1.random(minOrMax, max), util_1.random(minOrMax, max));\n    };\n    Vector.apply = function (action) {\n        var vectors = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            vectors[_i - 1] = arguments[_i];\n        }\n        return Vector.of(action.apply(void 0, vectors.map(function (vector) { return vector.x; })), action.apply(void 0, vectors.map(function (vector) { return vector.y; })));\n    };\n    Vector.range = function (_a) {\n        var _b = _a.x, x = _b === void 0 ? 0 : _b, _c = _a.y, y = _c === void 0 ? 0 : _c;\n        return this.iterate(Vector.of(x, y));\n    };\n    Vector.average = function (list) {\n        return list.reduce(function (sum, vector) { return sum.add(vector); }).vdiv(list.length);\n    };\n    Vector.iterate = function (vectorA, vectorB) {\n        var start, end, x, y;\n        if (vectorB === void 0) { vectorB = new Vector(0, 0); }\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    start = this.apply(Math.min, vectorA, vectorB);\n                    end = this.apply(Math.max, vectorA, vectorB);\n                    x = start.x;\n                    _a.label = 1;\n                case 1:\n                    if (!(x < end.x)) return [3 /*break*/, 6];\n                    y = start.y;\n                    _a.label = 2;\n                case 2:\n                    if (!(y < end.y)) return [3 /*break*/, 5];\n                    return [4 /*yield*/, start.add({ x: x, y: y })];\n                case 3:\n                    _a.sent();\n                    _a.label = 4;\n                case 4:\n                    y++;\n                    return [3 /*break*/, 2];\n                case 5:\n                    x++;\n                    return [3 /*break*/, 1];\n                case 6: return [2 /*return*/];\n            }\n        });\n    };\n    Object.defineProperty(Vector.prototype, \"isZero\", {\n        get: function () {\n            return this.x === 0 && this.y === 0;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Vector.prototype, \"magnitude\", {\n        get: function () {\n            if (this.isZero) {\n                return 0;\n            }\n            if (!this._magnitude) {\n                this._magnitude = Math.hypot(this.x, this.y);\n            }\n            return this._magnitude;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Vector.prototype, \"radians\", {\n        get: function () {\n            if (this.isZero) {\n                return 0;\n            }\n            var _a = this, x = _a.x, y = _a.y;\n            var arctan = Math.atan(y / x);\n            if (arctan < 0) {\n                arctan += Math.PI;\n            }\n            if (y < 0 || (y === 0 && x < 0)) {\n                arctan += Math.PI;\n            }\n            return arctan;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Vector.prototype.setX = function (value) {\n        return Vector.of(value, this.y);\n    };\n    Vector.prototype.setY = function (value) {\n        return Vector.of(this.x, value);\n    };\n    Vector.prototype.setMagnitude = function (value) {\n        if (this.magnitude === 0) {\n            return Vector.of(value, 0);\n        }\n        var ratio = this.magnitude / value;\n        return Vector.of(this.x / ratio, this.y / ratio);\n    };\n    Vector.prototype.diff = function (_a) {\n        var _b = _a.x, x = _b === void 0 ? this.x : _b, _c = _a.y, y = _c === void 0 ? this.y : _c;\n        return Vector.of(abs(this.x / x), abs(this.y / y));\n    };\n    Vector.prototype.distance = function (target) {\n        return this.sub(target).magnitude;\n    };\n    Vector.prototype.is = function (_a) {\n        var _b = _a.x, x = _b === void 0 ? this.x : _b, _c = _a.y, y = _c === void 0 ? this.y : _c;\n        return this.x === x && this.y === y;\n    };\n    Vector.prototype.vis = function (_a) {\n        var _b = _a.x, x = _b === void 0 ? this.x : _b, _c = _a.y, y = _c === void 0 ? this.y : _c;\n        return this.x === x && this.y === y;\n    };\n    Vector.prototype.sub = function (_a) {\n        var _b = _a.x, x = _b === void 0 ? 0 : _b, _c = _a.y, y = _c === void 0 ? 0 : _c;\n        return Vector.of(this.x - x, this.y - y);\n    };\n    Vector.prototype.vsub = function (value) {\n        return Vector.of(this.x - value, this.y - value);\n    };\n    Vector.prototype.add = function (_a) {\n        var _b = _a.x, x = _b === void 0 ? 0 : _b, _c = _a.y, y = _c === void 0 ? 0 : _c;\n        return Vector.of(this.x + x, this.y + y);\n    };\n    Vector.prototype.vadd = function (value) {\n        return Vector.of(this.x + value, this.y + value);\n    };\n    Vector.prototype.mul = function (_a) {\n        var _b = _a.x, x = _b === void 0 ? 1 : _b, _c = _a.y, y = _c === void 0 ? 1 : _c;\n        return Vector.of(this.x * x, this.y * y);\n    };\n    Vector.prototype.vmul = function (value) {\n        return Vector.of(this.x * value, this.y * value);\n    };\n    Vector.prototype.div = function (_a) {\n        var _b = _a.x, x = _b === void 0 ? 1 : _b, _c = _a.y, y = _c === void 0 ? 1 : _c;\n        return Vector.of(this.x / x, this.y / y);\n    };\n    Vector.prototype.vdiv = function (value) {\n        return Vector.of(this.x / value, this.y / value);\n    };\n    Vector.prototype.toString = function () {\n        return \"[Vector(\" + this.x + \", \" + this.y + \")]\";\n    };\n    Vector.prototype.toJSON = function () {\n        return {\n            $type: 'vector',\n            x: this.x,\n            y: this.y,\n        };\n    };\n    Vector.ZERO = Vector.of(0, 0);\n    return Vector;\n}());\nexports.default = Vector;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Rectangle_1 = require(\"./Rectangle\");\nexports.Rectangle = Rectangle_1.default;\nvar SquaredCircle_1 = require(\"./SquaredCircle\");\nexports.SquaredCircle = SquaredCircle_1.default;\nvar Vector_1 = require(\"./Vector\");\nexports.Vector = Vector_1.default;\nvar util_1 = require(\"./util\");\nexports.random = util_1.random;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction accessor(accessor, handler) {\n    if (handler === void 0) { handler = null; }\n    var get = new Function(\"return this.\" + accessor);\n    var set = new Function('value', \"this.\" + accessor + \" = value\");\n    if (handler) {\n        set = eval(\"(function smartSetter(value) {\\n      const prev = this.\" + accessor + \";\\n      this.\" + accessor + \" = value;\\n      handler(this, prev, value);\\n    })\");\n    }\n    return { get: get, set: set };\n}\nexports.default = accessor;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar list = window.location.search\n    .substr(1)\n    .split('&')\n    .map(function (x) { return x.split('='); });\nvar params = new Map(list);\nfunction getParam(name, def) {\n    return params.has(name) ? params.get(name) : def;\n}\nexports.default = getParam;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar accessor_1 = require(\"./accessor\");\nexports.accessor = accessor_1.default;\nvar getParam_1 = require(\"./getParam\");\nexports.getParam = getParam_1.default;\n","import IQuadEntity from './IQuadEntity';\nimport Quadtree from './quadtree';\n\nexport default class QuadtreeCanvasRenderer {\n  private readonly context: CanvasRenderingContext2D;\n\n  constructor(private readonly quadtree: Quadtree, canvas: HTMLCanvasElement) {\n    this.context = canvas.getContext('2d');\n  }\n\n  render() {\n    this.clear();\n    this.renderQuadrants();\n  }\n\n  clear() {\n    const {\n      context,\n      quadtree: {\n        bounds: { top, left, width, height },\n      },\n    } = this;\n\n    context.save();\n    context.fillStyle = 'black';\n    context.clearRect(left, top, width, height);\n    context.fillRect(left, top, width, height);\n    context.restore();\n  }\n\n  renderQuadrants() {\n    this.renderQuadrantsRecursive(this.quadtree);\n  }\n\n  private renderQuadrantsRecursive(quad: Quadtree) {\n    if (!quad.isDivided) return;\n\n    const { nw, ne, sw, se } = (quad as any) as DividedQuadtree;\n    this.renderQuadrantsRecursive(nw);\n    this.renderQuadrantsRecursive(ne);\n    this.renderQuadrantsRecursive(sw);\n    this.renderQuadrantsRecursive(se);\n\n    const { context } = this;\n    const { x, y, top, left, right, bottom } = quad.bounds;\n\n    context.save();\n    context.beginPath();\n    context.strokeStyle = 'gray';\n    context.moveTo(x, top);\n    context.lineTo(x, bottom);\n    context.moveTo(left, y);\n    context.lineTo(right, y);\n    context.closePath();\n    context.stroke();\n    context.restore();\n  }\n\n  renderEntity(entity: IQuadEntity) {\n    if (!this.quadtree.includes(entity)) {\n      throw new Error('Rendering entity not in the tree');\n    }\n\n    const { context } = this;\n    const { x, y, width, height } = entity;\n\n    context.save();\n    context.fillStyle = 'white';\n    context.fillRect(x, y, width, height);\n    context.restore();\n  }\n}\n\ninterface DividedQuadtree {\n  nw: Quadtree;\n  ne: Quadtree;\n  sw: Quadtree;\n  se: Quadtree;\n}\n","import { IRectangle, Rectangle } from '@amatiasq/geometry';\nimport IQuadEntity from './IQuadEntity';\n\nexport default class Quadtree {\n  private entities: IQuadEntity[] = [];\n\n  private _isDivided = false;\n  get isDivided() {\n    return this._isDivided;\n  }\n\n  get entitiesCount() {\n    if (!this.isDivided) return this.entities.length;\n\n    return (\n      this.entities.length +\n      this.nw.entitiesCount +\n      this.ne.entitiesCount +\n      this.sw.entitiesCount +\n      this.se.entitiesCount\n    );\n  }\n\n  private get hasNodes() {\n    return this.nw && this.ne && this.sw && this.se;\n  }\n\n  protected nw: Quadtree;\n  protected ne: Quadtree;\n  protected sw: Quadtree;\n  protected se: Quadtree;\n\n  constructor(\n    public bounds: Rectangle,\n    public readonly maxEntities: number,\n    public readonly maxDepth: number,\n    public readonly level: number = 0,\n  ) {}\n\n  add(entity: IQuadEntity) {\n    if (!this.isDivided) {\n      this.entities.push(entity);\n\n      if (this.entities.length > this.maxEntities) {\n        this.split();\n      }\n\n      return;\n    }\n\n    if (!this.addToQuadrant(entity)) this.entities.push(entity);\n  }\n\n  includes(entity: IQuadEntity): boolean {\n    if (!this.isDivided) return this.entities.includes(entity);\n\n    return (\n      this.entities.includes(entity) ||\n      this.nw.includes(entity) ||\n      this.ne.includes(entity) ||\n      this.sw.includes(entity) ||\n      this.se.includes(entity)\n    );\n  }\n\n  resize(bounds: Rectangle) {\n    this.bounds = bounds;\n    if (!this.hasNodes) return;\n\n    const b = bounds;\n    this.nw.resize(Rectangle.fromXY(b.left, b.top, b.halfWidth, b.halfHeight));\n    this.ne.resize(Rectangle.fromXY(b.x, b.top, b.halfWidth, b.halfHeight));\n    this.sw.resize(Rectangle.fromXY(b.left, b.y, b.halfWidth, b.halfHeight));\n    this.se.resize(Rectangle.fromXY(b.x, b.y, b.halfWidth, b.halfHeight));\n  }\n\n  private createChild(x: number, y: number, width: number, height: number) {\n    return new Quadtree(\n      Rectangle.fromXY(x, y, width, height),\n      this.maxEntities,\n      this.maxDepth,\n      this.level + 1,\n    );\n  }\n\n  protected split() {\n    if (this.level >= this.maxDepth) return;\n    if (this.isDivided) throw new Error('Already splitted');\n\n    this._isDivided = true;\n    if (!this.hasNodes) this.splitArea();\n    this.distribute();\n  }\n\n  protected unsplit() {\n    if (!this.isDivided) throw new Error('Quadtree not splitted');\n\n    this.entities = [\n      ...this.entities,\n      ...this.nw.empty(),\n      ...this.ne.empty(),\n      ...this.sw.empty(),\n      ...this.se.empty(),\n    ];\n    this._isDivided = false;\n  }\n\n  private splitArea() {\n    const b = this.bounds;\n    this.nw = this.createChild(b.left, b.top, b.halfWidth, b.halfHeight);\n    this.ne = this.createChild(b.x, b.top, b.halfWidth, b.halfHeight);\n    this.sw = this.createChild(b.left, b.y, b.halfWidth, b.halfHeight);\n    this.se = this.createChild(b.x, b.y, b.halfWidth, b.halfHeight);\n  }\n\n  private distribute() {\n    const entities = this.entities;\n    this.entities = [];\n\n    for (let i = 0; i < entities.length; i++) {\n      const entity = entities[i];\n\n      if (!this.addToQuadrant(entity)) this.entities.push(entity);\n    }\n  }\n\n  protected addToQuadrant(entity: IQuadEntity): boolean {\n    if (!this.contains(entity)) {\n      debugger;\n      throw new Error(\n        `Can't get index. The entity ${entity} is not contained in ${\n          this.bounds\n        }`,\n      );\n    }\n\n    if (this.nw.contains(entity)) {\n      this.nw.add(entity);\n      return true;\n    }\n\n    if (this.ne.contains(entity)) {\n      this.ne.add(entity);\n      return true;\n    }\n\n    if (this.sw.contains(entity)) {\n      this.sw.add(entity);\n      return true;\n    }\n\n    if (this.se.contains(entity)) {\n      this.se.add(entity);\n      return true;\n    }\n\n    return false;\n  }\n\n  contains(entity: IQuadEntity) {\n    return this.bounds.contains(entity);\n  }\n\n  getAt(range: IRectangle) {\n    if (!this.bounds.collides(range)) {\n      return [];\n    }\n\n    const ownEntitites = this.entities.filter(entity => range.collides(entity));\n    if (!this.isDivided) return ownEntitites;\n\n    return [\n      ...ownEntitites,\n      ...this.nw.getAt(range),\n      ...this.ne.getAt(range),\n      ...this.sw.getAt(range),\n      ...this.se.getAt(range),\n    ];\n  }\n\n  recalculate(): IQuadEntity[] {\n    const toRecalculate = [];\n    const excluded = [];\n\n    if (this.isDivided) {\n      toRecalculate.push(...this.nw.recalculate());\n      toRecalculate.push(...this.ne.recalculate());\n      toRecalculate.push(...this.sw.recalculate());\n      toRecalculate.push(...this.se.recalculate());\n    }\n\n    toRecalculate.push(...this.entities);\n    this.entities = [];\n\n    for (let i = 0; i < toRecalculate.length; i++) {\n      const entity = toRecalculate[i];\n      if (this.bounds.contains(entity)) {\n        this.add(entity);\n      } else {\n        excluded.push(entity);\n      }\n    }\n\n    if (this.isDivided && this.entitiesCount <= this.maxEntities) {\n      this.unsplit();\n    }\n\n    return excluded;\n  }\n\n  private empty() {\n    const { entities } = this;\n\n    if (this.entities.length) {\n      this.entities = [];\n    }\n\n    if (!this.isDivided) return entities;\n\n    return [\n      ...this.entities,\n      ...this.nw.empty(),\n      ...this.ne.empty(),\n      ...this.sw.empty(),\n      ...this.se.empty(),\n    ];\n  }\n\n  private getName(quadrant: Quadtree) {\n    if (quadrant === this.nw) return 'nw';\n    if (quadrant === this.ne) return 'ne';\n    if (quadrant === this.sw) return 'sw';\n    if (quadrant === this.se) return 'se';\n    return 'NOT A CHILDREN';\n  }\n}\n\nexport type QuadrantName = 'nw' | 'ne' | 'sw' | 'se';\n","export default class Canvas {\n  public readonly element: HTMLCanvasElement;\n  public readonly context: CanvasRenderingContext2D;\n  public onResize: (self: Canvas) => void;\n\n  get width() {\n    return this.element.width;\n  }\n  set width(value: number) {\n    this.element.width = value;\n  }\n\n  get height() {\n    return this.element.height;\n  }\n  set height(value: number) {\n    this.element.height = value;\n  }\n\n  constructor(public readonly selector: string, { fillScreen = true } = {}) {\n    this.element = document.querySelector(selector);\n    this.context = this.element.getContext('2d');\n    this.fillScreenSize = this.fillScreenSize.bind(this);\n\n    if (fillScreen) {\n      this.fillScreen();\n    }\n  }\n\n  fillScreen({ watchResize = true } = {}) {\n    this.fillScreenSize();\n\n    if (watchResize) {\n      window.addEventListener('resize', this.fillScreenSize);\n    }\n  }\n\n  private fillScreenSize() {\n    let hasChanged = false;\n\n    if (this.element.width !== window.innerWidth) {\n      this.element.width = window.innerWidth;\n      hasChanged = true;\n    }\n\n    if (this.element.height !== window.innerHeight) {\n      this.element.height = window.innerHeight;\n      hasChanged = true;\n    }\n\n    if (hasChanged && this.onResize) {\n      this.onResize(this);\n    }\n  }\n}\n","import { Vector } from '@amatiasq/geometry';\nimport { Rectangle, random } from '@amatiasq/geometry';\nimport { getParam } from '@amatiasq/util';\nimport IQuadEntity from '../src/IQuadEntity';\nimport QuadtreeCanvasRenderer from '../src/QuadtreeCanvasRenderer';\nimport Quadtree from '../src/quadtree';\nimport Canvas from './Canvas';\n\nconst maxEntities = getParam('maxEntities', 3);\nconst maxDepth = getParam('maxDepth', 5);\nconst entitiesCount = getParam('entitiesCount', 100);\nconst entitySize = getParam('entitySize', 3);\n\nclass Entity extends Rectangle implements IQuadEntity {\n  velocity = Vector.fromRandom(-10, 10);\n\n  update() {\n    this.x += this.velocity.x;\n    this.y += this.velocity.y;\n  }\n}\n\nconst canvas = new Canvas('canvas', { fillScreen: true });\nconst quadtree = new Quadtree(\n  Rectangle.fromXY(0, 0, canvas.width, canvas.height),\n  maxEntities,\n  maxDepth,\n);\nconst renderer = new QuadtreeCanvasRenderer(quadtree, canvas.element);\nconst entities: Entity[] = [];\n\ncanvas.onResize = () => {\n  quadtree.resize(Rectangle.fromXY(0, 0, canvas.width, canvas.height));\n\n  const excluded = quadtree.recalculate() as Entity[];\n\n  for (const entry of excluded) {\n    entry.x = canvas.width / 2;\n    entry.y = canvas.height / 2;\n    quadtree.add(entry);\n  }\n};\n\nfor (let i = 0; i < entitiesCount; i++) {\n  const entity = Entity.fromXY(\n    random(entitySize, canvas.width - entitySize),\n    random(entitySize, canvas.height - entitySize),\n    entitySize,\n    entitySize,\n  ) as Entity;\n\n  quadtree.add(entity);\n  entities.push(entity);\n}\n\nrender();\nrequestAnimationFrame(update);\n\nObject.assign(window, {\n  quadtree,\n  renderer,\n  entities,\n});\n\nfunction update() {\n  for (const entity of entities) {\n    entity.update();\n  }\n\n  recalculate();\n  render();\n  requestAnimationFrame(update);\n}\n\nfunction render() {\n  renderer.render();\n\n  for (const entity of entities) {\n    renderer.renderEntity(entity);\n  }\n}\n\nfunction recalculate() {\n  const excluded = quadtree.recalculate() as Entity[];\n\n  for (const entry of excluded) {\n    let i = 0;\n    while (!quadtree.contains(entry)) {\n      if (entry.left < 0 || entry.right > canvas.width) {\n        entry.velocity = Vector.of(-entry.velocity.x, entry.velocity.y);\n      }\n\n      if (entry.top < 0 || entry.bottom > canvas.height) {\n        entry.velocity = Vector.of(entry.velocity.x, -entry.velocity.y);\n      }\n\n      entry.update();\n      i++;\n\n      if (i > 100) debugger;\n    }\n\n    quadtree.add(entry);\n  }\n}\n"]}